"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[458],{7458:(e,t,o)=>{o.d(t,{NostrProvider:()=>l,y:()=>c});var r=o(5155),n=o(2115),i=o(9670);let s=(0,n.createContext)(void 0);class a{setNDK(e){this.ndk=e}async user(){if(this._user||await this.blockUntilReady(),!this._user)throw Error("Failed to initialize user");return this._user}async blockUntilReady(){if(!window.nostr)throw Error("Nostr extension not found");let e=await this.getPublicKey();return this._user=new i.NDKUser({pubkey:e}),this._user}async getPublicKey(){if(!window.nostr)throw Error("Nostr extension not found");return this.pubkey||(this.pubkey=await window.nostr.getPublicKey()),this.pubkey}async sign(e){if(!window.nostr)throw Error("Nostr extension not found");return(await window.nostr.signEvent({kind:e.kind,tags:e.tags,content:e.content,created_at:e.created_at,pubkey:await this.getPublicKey()})).sig}async encrypt(e,t){var o;if(!(null===(o=window.nostr)||void 0===o?void 0:o.nip04))throw Error("NIP-04 encryption not supported by extension");return window.nostr.nip04.encrypt(e.pubkey,t)}async decrypt(e,t){var o;if(!(null===(o=window.nostr)||void 0===o?void 0:o.nip04))throw Error("NIP-04 encryption not supported by extension");return window.nostr.nip04.decrypt(e.pubkey,t)}async nip04Encrypt(e,t){return this.encrypt(e,t)}async nip04Decrypt(e,t){return this.decrypt(e,t)}async nip44Encrypt(e,t){var o;if(!(null===(o=window.nostr)||void 0===o?void 0:o.nip44))throw Error("NIP-44 encryption not supported by extension");return window.nostr.nip44.encrypt(e.pubkey,t)}async nip44Decrypt(e,t){var o;if(!(null===(o=window.nostr)||void 0===o?void 0:o.nip44))throw Error("NIP-44 encryption not supported by extension");return window.nostr.nip44.decrypt(e.pubkey,t)}constructor(){this.pubkey=null,this.ndk=null,this._user=null}}function l(e){let{children:t}=e,[l,c]=(0,n.useState)(null),[u,d]=(0,n.useState)(null),[p,f]=(0,n.useState)(()=>localStorage.getItem("nostr_pubkey")),[w,y]=(0,n.useState)(["wss://relay.damus.io","wss://nos.lol","wss://relay.nostr.band","wss://nostr.wine","wss://relay.snort.social","wss://purplepag.es"]),[h,g]=(0,n.useState)(!0),b=(0,n.useCallback)(async()=>{try{let e=new a,t=new i.default({explicitRelayUrls:w,enableOutboxModel:!0});t.signer=e,e.setNDK(t),c(t);try{if(await t.connect(),p){let e=t.getUser({pubkey:p});await e.fetchProfile(),d(e)}}catch(e){if(console.warn("Some relays failed to connect:",e),p)try{let e=t.getUser({pubkey:p});await e.fetchProfile(),d(e)}catch(e){console.error("Failed to fetch profile after NDK initialization:",e)}}}catch(e){console.error("Failed to initialize NDK:",e)}finally{g(!1)}},[w,p]);(0,n.useEffect)(()=>{b()},[b]);let v=(0,n.useCallback)(async()=>{if(l&&p)try{console.log("Fetching user profile for:",p);let e=await l.fetchEvents({kinds:[0],authors:[p]});console.log("Found profile events:",e.size);let t=Array.from(e).sort((e,t)=>(t.created_at||0)-(e.created_at||0))[0];if(t){console.log("Found profile event:",t);try{let e=JSON.parse(t.content);console.log("Parsed profile content:",e);let o=l.getUser({pubkey:p});o.profile=e,d(o)}catch(e){console.error("Failed to parse profile content:",e)}}else{console.log("No profile event found, creating empty profile");let e=l.getUser({pubkey:p});d(e)}}catch(e){console.error("Failed to fetch user profile:",e)}},[l,p]);(0,n.useEffect)(()=>{l&&p&&(console.log("Triggering profile fetch due to NDK or publicKey change"),v())},[l,p,v]);let k=async()=>{if(l)try{if(g(!0),!window.nostr)throw Error("Nostr extension not found");let e=await window.nostr.getPublicKey();localStorage.setItem("nostr_pubkey",e),f(e)}catch(e){throw console.error("Login failed:",e),e}finally{g(!1)}},E=async e=>{w.includes(e)||y([...w,e])},m=async e=>{y(w.filter(t=>t!==e))},N=async()=>{if(!l||!p)return[];try{console.log("Fetching contact list...");let e=await l.fetchEvents({kinds:[3],authors:[p]}),t=[];for(let o of e){let e=o.tags.filter(e=>"p"===e[0]);console.log("Found ".concat(e.length," friend tags in contact list"));let r=e.map(e=>e[1]);if(0===r.length)continue;console.log("Fetching profiles for friends:",r);let n={kinds:[0],authors:r},i=await l.fetchEvents(n);for(let e of(console.log("Fetched ".concat(i.size," profile events")),i))try{let o=JSON.parse(e.content);console.log("Profile content for",e.pubkey,":",o),t.push({pubkey:e.pubkey,profile:{name:o.name,picture:o.picture}})}catch(t){console.error("Failed to parse profile for ".concat(e.pubkey,":"),t)}}return console.log("Final friends list:",t),t}catch(e){return console.error("Error in getFriends:",e),[]}},P=async(e,t)=>{if(l&&p)try{let o=new i.NDKEvent(l);o.kind=4,o.pubkey=p,o.created_at=Math.floor(Date.now()/1e3),o.tags=[["p",e]];let r=l.getUser({pubkey:e});await o.encrypt(r),o.content=t,await o.sign(),await o.publish()}catch(e){throw console.error("Error sending message:",e),e}},_=async(e,t)=>{if(!l||!p||!window.nostr)throw console.error("Create match prerequisites not met:",{hasNdk:!!l,hasPublicKey:!!p,hasNostrExtension:!!window.nostr}),Error("Missing required nostr components");try{var r,n;console.log("Starting match creation between:",e,t);let i=l.getUser({pubkey:e}),s=l.getUser({pubkey:t});console.log("Fetching user profiles...");try{await Promise.all([i.fetchProfile(),s.fetchProfile()]),console.log("Successfully fetched profiles")}catch(e){throw console.error("Failed to fetch user profiles:",e),e}let a=(null===(r=i.profile)||void 0===r?void 0:r.name)||e.slice(0,8),c=(null===(n=s.profile)||void 0===n?void 0:n.name)||t.slice(0,8);console.log("Creating event data...");let u={kind:1,created_at:Math.floor(Date.now()/1e3),tags:[["p",e],["p",t],["t","youcupid-match"],["friend1_name",a],["friend2_name",c]],content:"Match created between ".concat(a," and ").concat(c,"!"),pubkey:p};console.log("Signing event...");try{let e=await window.nostr.signEvent(u);console.log("Event signed successfully");let t=new(await Promise.resolve().then(o.bind(o,9670))).NDKEvent(l,u);t.sig=e.sig,await t.toNostrEvent(),console.log("Event created with ID:",t.id),console.log("Publishing event...");let r=t.publish(),n=new Promise((e,t)=>{setTimeout(()=>t(Error("Publish timeout")),5e3)});await Promise.race([r,n]),console.log("Event published successfully"),await new Promise(e=>setTimeout(e,1e3)),console.log("Verifying event publication...");let i={kinds:[1],ids:[t.id]};if(!await l.fetchEvent(i))throw Error("Failed to verify event publication");console.log("Event verified successfully")}catch(e){throw console.error("Error in event signing/publishing:",e),e}}catch(e){throw console.error("Error creating match:",e),e}},F=async()=>{if(!l||!p)return[];let e=Array.from(await l.fetchEvents({kinds:[1],authors:[p],"#t":["youcupid-match"]})),t=new Set;for(let o of e)o.tags.filter(e=>"p"===e[0]).forEach(e=>t.add(e[1]));let o={kinds:[0],authors:Array.from(t)},r=await l.fetchEvents(o),n=new Map;for(let e of r)try{let t=JSON.parse(e.content);n.set(e.pubkey,{name:t.name||e.pubkey.slice(0,8),picture:t.picture})}catch(e){console.warn("Failed to parse profile:",e)}for(let t of e){let e=t.tags.find(e=>"p"===e[0]&&e[1]),o=t.tags.find(t=>t[1]!==(null==e?void 0:e[1])&&"p"===t[0]);if(e&&o){let r=n.get(e[1]),i=n.get(o[1]);t.tags=t.tags.map(e=>{if("p"===e[0]){let t=n.get(e[1]);if(t)return[...e,t.name,t.picture||""]}return e});let s=(null==r?void 0:r.name)||e[1].slice(0,8),a=(null==i?void 0:i.name)||o[1].slice(0,8);t.content="Match created between ".concat(s," and ").concat(a,"!")}}return e},S=async()=>{if(!l||!p)return[];let e=Array.from(await l.fetchEvents({kinds:[1],"#t":["youcupid-match"],"#p":[p]})).filter(e=>e.pubkey!==p),t=new Set;for(let o of e)o.tags.filter(e=>"p"===e[0]).forEach(e=>t.add(e[1]));let o={kinds:[0],authors:Array.from(t)},r=await l.fetchEvents(o),n=new Map;for(let e of r)try{let t=JSON.parse(e.content);n.set(e.pubkey,{name:t.name||e.pubkey.slice(0,8),picture:t.picture})}catch(e){console.warn("Failed to parse profile:",e)}for(let t of e){let e=t.tags.find(e=>"p"===e[0]&&e[1]),o=t.tags.find(t=>t[1]!==(null==e?void 0:e[1])&&"p"===t[0]);if(e&&o){let r=n.get(e[1]),i=n.get(o[1]);t.tags=t.tags.map(e=>{if("p"===e[0]){let t=n.get(e[1]);if(t)return[...e,t.name,t.picture||""]}return e});let s=(null==r?void 0:r.name)||e[1].slice(0,8),a=(null==i?void 0:i.name)||o[1].slice(0,8);t.content="Match created between ".concat(s," and ").concat(a,"!")}}return e},D=async e=>{if(!l||!p||!window.nostr)throw Error("Missing required nostr components");try{console.log("Updating profile with:",e);let t={kind:0,created_at:Math.floor(Date.now()/1e3),tags:[],content:JSON.stringify(e),pubkey:p},o=await window.nostr.signEvent(t),r=new i.NDKEvent(l,t);if(r.sig=o.sig,await r.toNostrEvent(),await r.publish(),console.log("Profile update published successfully"),u){let t=l.getUser({pubkey:p});t.profile={...u.profile,...e},d(t)}await v()}catch(e){throw console.error("Error updating profile:",e),e}},K=async e=>{if(!l||!p||!window.nostr)throw Error("Missing required nostr components");try{console.log("Adding friend:",e);let t=await l.fetchEvents({kinds:[3],authors:[p]}),o=Array.from(t)[0],r=(o?o.tags:[]).filter(e=>"p"===e[0]);if(r.some(t=>t[1]===e))throw Error("Friend already exists in contact list");let n=[...r,["p",e]],s={kind:3,created_at:Math.floor(Date.now()/1e3),tags:n,content:"",pubkey:p},a=await window.nostr.signEvent(s),c=new i.NDKEvent(l,s);c.sig=a.sig,await c.toNostrEvent(),await c.publish(),console.log("Friend added successfully")}catch(e){throw console.error("Error adding friend:",e),e}};return(0,r.jsx)(s.Provider,{value:{ndk:l,user:u,publicKey:p,relays:w,isLoading:h,login:k,logout:()=>{localStorage.removeItem("nostr_pubkey"),d(null),f(null)},addRelay:E,removeRelay:m,getFriends:N,sendDirectMessage:P,createMatch:_,getMatches:F,getMatchesInvolvingMe:S,updateProfile:D,addFriend:K},children:t})}function c(){let e=(0,n.useContext)(s);if(void 0===e)throw Error("useNostr must be used within a NostrProvider");return e}}}]);